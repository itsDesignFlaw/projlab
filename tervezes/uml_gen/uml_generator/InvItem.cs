using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace VeryGoodViroGame
{
    //
    //  Generated by StarUML(tm) Java Add-In
    //
    //  @ Project : Untitled
    //  @ File Name : VeryGoodViroGame.InvItem.java
    //  @ Date : 2022. 03. 27.
    //  @ Author : 
    //
    //
    /// <summary>
    /// Ez az osztály felel a játékban kifejtett hatások definiálásáért.
    /// Minden olyan itemnek (vagy azokhoz köthető osztálynak, pl Ágensek),
    /// ami hatást fejt ki egy virológusra, ebből az osztályból kell öröklődnie.
    /// Tisztázat működéshez: Az ehhez az osztályhoz tartozó függvények minden,
    /// egy virológushoz tartozó InvItem (vagy gyermekosztály) példányokon meghívásra kerülnek,
    /// alapértelmezetten ‘true’ boolean értéket adnak ebben az osztályban vissza (IsParalyzed metóduson kívül).
    /// Ha a virológus InvItem-jei függvényenként mind végig lesznek iterálva mindaddig,
    /// míg egy alapértelmezettel szembemenő (un. ‘blokkoló’) visszatérési értéket kap).
    /// </summary>
    public abstract class InvItem
    {
        /// <summary>
        /// A metódus visszatér egy egész számmal, ami megmutatja,
        /// hogy az adott item hatására mennyivel növekszik meg a
        /// virológus hordozási kapacitása. Alapértelmezett értéke igaz.
        /// </summary>
        /// <returns>a fentebb definiált egész szám</returns>
        public virtual int GetMaxResource()
        {
            Logger.NewFunctionCall(this, "GetMaxResource");
            Logger.ReturnFunction();
            return 0;
        }

        /// <summary>
        /// A metódus visszatér egy boolean értékkel,
        /// az alapján, hogy az adott ágenst fel lehet e kenni a paraméterként kapott virológusra.
        /// Alapértelmezett értéke igaz.
        /// </summary>
        /// <param name="agent">az ágens amire vizsgáljuk, hogy felkenhető-e</param>
        /// <param name="source">a kenést végző virológus</param>
        /// <returns>a fentebb leírt boolean visszatérési érték</returns>
        public virtual bool CanAgentBeApplied(Agent agent, Virologist source)
        {
            Logger.NewFunctionCall(this, "CanAgentBeApplied");
            Logger.ReturnFunction();
            return true;
        }

        /// <summary>
        /// A metódus visszatért egy boolean értékkel az alapján,
        /// hogy az adott ágens engedi e, hogy a virológus raboljon másik virológustól.
        /// Alapértelmezett értéke igaz.
        /// </summary>
        /// <returns>a fentebb leírt boolean visszatérési érték</returns>
        public virtual bool CanSteal()
        {
            Logger.NewFunctionCall(this, "CanSteal");
            Logger.ReturnFunction();
            return true;
        }

        /// <summary>
        /// A metódus visszatér egy boolean értékkel az alapján,
        /// hogy az adott item hatására megbénul-e a virológus.
        /// Alapértelmezett értéke hamis.
        /// </summary>
        /// <returns>a fentebb leírt boolean visszatérési érték</returns>
        public virtual bool IsParalyzed()
        {
            Logger.NewFunctionCall(this, "IsParalyzed");
            Logger.ReturnFunction();
            return false;
        }

        /// <summary>
        /// A metódus visszatért egy boolean értékkel az alapján,
        /// hogy az adott ágens engedi e, hogy a virológus craftolhat e vakcinákat és vírusokat.
        /// Alapértelmezett értéke igaz.
        /// </summary>
        /// <returns>a fentebb leírt boolean visszatérési érték</returns>
        public virtual bool CanCraft()
        {
            Logger.NewFunctionCall(this, "CanCraft");
            Logger.ReturnFunction();
            return true;
        }

        /// <summary>
        /// A metódus visszatért egy boolean értékkel az alapján,
        /// hogy az adott ágens engedi e, hogy a virológus kapcsolatba léphet a mezővel.
        /// Alapértelmezett értéke igaz.
        /// </summary>
        /// <returns>a fentebb leírt boolean visszatérési érték</returns>
        public virtual bool CanInteract()
        {
            Logger.NewFunctionCall(this, "CanInteract");
            Logger.ReturnFunction();
            return true;
        }

        /// <summary>
        /// A metódus visszatért egy boolean értékkel az alapján,
        /// hogy az adott ágens engedi e, hogy a virológus kenjen másra ágenst.
        /// Alapértelmezett értéke igaz.
        /// </summary>
        /// <returns>a fentebb leírt boolean visszatérési érték</returns>
        public virtual bool CanApplyAgent()
        {
            Logger.NewFunctionCall(this, "CanApplyAgent");
            Logger.ReturnFunction();
            return true;
        }
    }
} //
