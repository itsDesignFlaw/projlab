package VeryGoodViroGame.Agent;//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : VeryGoodViroGame.Agent.Agent.java
//  @ Date : 2022. 03. 27.
//  @ Author : 
//
//

import VeryGoodViroGame.*;
import VeryGoodViroGame.MoveStrategy.iMoveStrategy;

/**
 * Az összes ágens ősosztálya, az osztály felelőssége, hogy előírja,
 * hogyan lehet felkenni az ágenseket, és felel azért is, hogy csak adott ideig fejtsék ki a hatásukat.
 */
public abstract class Agent extends InvItem implements iSteppable
{
    int activeTime = 6969;
    //Akin van
    Virologist host;
    iMoveStrategy strategy;
    
    /**
     * A source paraméterként kapott virológus megkísérli felkenni az ágenst a targetként megkapott virológusra.
     *
     * @param source az ágenst felkenő virológus
     * @param target az a virológus akire felkenik az ágenst
     */
    public void Apply(Virologist source, Virologist target)
    {
        Logger.NewFunctionCall(this, "Apply");
        if(target.ApplyAgent(this, source))
        {
            target.ChangeMoveStrategy(strategy);
        }
        host = target;
        Logger.ReturnFunction();
    }
    
    /**
     * Minden időpillanatban meghívódik ez a függvény, és csökkenti az időt ameddig még aktív az ágens.
     */
    public void Step()
    {
        Logger.NewFunctionCall(this, "Step");
        activeTime--;
        if(activeTime <= 0)
        {
            host.RemoveMoveStrategy(strategy);
            host.RemoveItem(this);
            //Ezzel gáz lesz, mert nem szereti a java
            //ha foreach közben kiszedünk a listából
            //Megoldás: klónozás, vagy dead flag
            Timer.RemoveSteppable(this);
        }
        Logger.ReturnFunction();
    }
    
    /**
     * Lemásolja az adott ágenst.
     */
    public Agent Clone()
    {
        Logger.NewFunctionCall(this, "Clone");
        Logger.ReturnFunction();
        return this;
    }
    
}
