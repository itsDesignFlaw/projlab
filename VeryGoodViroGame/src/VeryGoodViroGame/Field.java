package VeryGoodViroGame;//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : VeryGoodViroGame.Field.java
//  @ Date : 2022. 03. 27.
//  @ Author : 
//
//


import java.util.List;


/**
 * Az egyszerű mezőt reprezentálja, melyen a virológusok mozoghatnak. Ismernie kell, adott mezőn, mely virológusok állnak.
 */
public class Field {
    List<Virologist> virologists;
    private List<Field> neighbours;

    /**
     * A virológus mezőre lépésekor ezt a függvényt kell meghívni a virolgóust paraméterként átadva, ezáltal tudja a mező befogadni.
     *
     * @param v A virológus aki a mezőre lép.
     */
    public void AcceptViro(Virologist v) {
        Logger.NewFunctionCall("Field.AcceptViro");
        v.SetField(this);
        Logger.ReturnFunction();
    }

    /**
     * Ha egy virológus rajta van egy mezőn, akkor lehetősége van a mezővel interaktálni.
     *
     * @param v A virológus aki a mezőn van.
     */
    public void Interact(Virologist v) {
        Logger.NewFunctionCall("Field.Interact");
        Logger.ReturnFunction();
    }

    /**
     * Ez a metódus felelős azért, hogy a virológust le tudjuk venni a mezőről, amikor az el akarja hagyni azt.
     *
     * @param v A virológus aki a mezőt el akarja hagyni.
     */
    public void RemoveViro(Virologist v) {
        Logger.NewFunctionCall("Field.RemoveViro");
        Logger.ReturnFunction();
    }

    /**
     * Ez a metódus felelős azért, hogy a mezőnek felvegyünk egy szomszédot.
     *
     * @param f A leendő szomszédos mező.
     */
    public void AddNeighbour(Field f) {
        Logger.NewFunctionCall("Field.AddNeighbour");
        Logger.ReturnFunction();
    }

    /**
     * Visszaad egyet a környező mezők közül, random.
     */
    public Field GetRandomNeighbour() {
        Logger.NewFunctionCall("Field.GetRandomNeighbour");
        Logger.ReturnFunction();
        return new Field();
    }
}
